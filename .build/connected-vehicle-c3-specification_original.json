{
  "openapi": "3.0.1",
  "info": {
    "title": "Connected Vehicle",
    "description": "This API allows to get latest status, diagnostics and statistics data of a connected vehicle as well as providing functionalities to invoke designated actions towards the vehicle",
    "contact": {},
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://api.volvocars.com/connected-vehicle/v2"
    }
  ],
  "paths": {
    "/vehicles/{vin}/commands/unlock": {
      "post": {
        "tags": [
          "Doors, windows and locks"
        ],
        "summary": "Unlock doors",
        "description": "Used to send an unlock command to the vehicle.",
        "operationId": "InvokeUnlock",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvokeUnlock"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string",
                  "readyToUnlock": true,
                  "readyToUnlockUntil": 0
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/lock": {
      "post": {
        "tags": [
          "Doors, windows and locks"
        ],
        "summary": "Lock doors",
        "description": "Used to send a lock command to the vehicle.",
        "operationId": "InvokeLock",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/honk": {
      "post": {
        "tags": [
          "Lights and sound"
        ],
        "summary": "Honk horn",
        "description": "Used to send a honk command to the vehicle.",
        "operationId": "InvokeHonk",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/flash": {
      "post": {
        "tags": [
          "Lights and sound"
        ],
        "summary": "Flash exterior lights",
        "description": "Used to send a flash command to the vehicle.",
        "operationId": "InvokeFlash",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/engine-stop": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Stop Engine",
        "description": "Used to send a engine stop command to the vehicle.",
        "operationId": "InvokeEngineStop",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/engine-start": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Start Engine",
        "description": "Command used to start the engine of the vehicle. To check which vehicles support this function please call [List commands](/apis/connected-vehicle/endpoints/commands/#list-commands).",
        "operationId": "InvokeEngineStart",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The minimum runtimeMinutes value is 0 and maximum 15.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineStartRequest"
              },
              "example": {
                "runtimeMinutes": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/climatization-stop": {
      "post": {
        "tags": [
          "Climate"
        ],
        "summary": "Stop climatisation",
        "description": "Used to send a climatisation stop command to the vehicle.",
        "operationId": "InvokeClimatizationStop",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/climatization-start": {
      "post": {
        "tags": [
          "Climate"
        ],
        "summary": "Start climatisation",
        "description": "Used to send a climatisation start command to the vehicle.",
        "operationId": "InvokeClimatizationStart",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "List vehicles",
        "description": "Provides all current valid relations between a Volvo Id (user) and its connected vehicles. Returns a list of VINs. Required Scope(s): conve:vehicle_relation",
        "operationId": "GetVehicleList",
        "parameters": [
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleVin"
                },
                "example": {
                  "vin": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Get vehicle details",
        "description": "Provides details about the vehicle such as model, model-year etc. Required Scope(s): conve:vehicle_relation",
        "operationId": "GetVehicleDetails",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDetails"
                },
                "example": {
                  "vin": "string",
                  "modelYear": 0,
                  "gearbox": "string",
                  "fuelType": "string",
                  "externalColour": "string",
                  "batteryCapacityKWH": 0,
                  "images": {
                    "exteriorImageUrl": "string",
                    "internalImageUrl": "string"
                  },
                  "descriptions": {
                    "model": "string",
                    "upholstery": "string",
                    "steering": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/windows": {
      "get": {
        "tags": [
          "Doors, windows and locks"
        ],
        "summary": "Get window status",
        "description": "Vehicle's Latest Window Status Values",
        "operationId": "GetWindowStatus",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Windows"
                },
                "example": {
                  "frontLeftWindow": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "frontRightWindow": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "rearLeftWindow": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "rearRightWindow": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "sunroof": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/warnings": {
      "get": {
        "tags": [
          "Warnings"
        ],
        "summary": "Get warnings",
        "description": "Vehicle's Latest Warning Values like bulb failure",
        "operationId": "GetWarnings",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExteriorWarning"
                },
                "example": {
                  "brakeLightCenterWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "brakeLightLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "brakeLightRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "fogLightFrontWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "fogLightRearWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "positionLightFrontLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "positionLightFrontRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "positionLightRearLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "positionLightRearRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "highBeamLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "highBeamRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "lowBeamLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "lowBeamRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "daytimeRunningLightLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "daytimeRunningLightRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "turnIndicationFrontLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "turnIndicationFrontRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "turnIndicationRearLeftWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "turnIndicationRearRightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "registrationPlateLightWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "sideMarkLightsWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "hazardLightsWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "reverseLightsWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/tyres": {
      "get": {
        "tags": [
          "Tyres"
        ],
        "summary": "Get tyres status",
        "description": "Endpoint used to get vehicle’s latest tyre status values.",
        "operationId": "GetTyrePressureValues",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TyrePressureResponse"
                },
                "example": {
                  "status": 0,
                  "operationId": "string",
                  "data": {
                    "frontLeft": {
                      "value": "string",
                      "timestamp": "string"
                    },
                    "frontRight": {
                      "value": "string",
                      "timestamp": "string"
                    },
                    "rearLeft": {
                      "value": "string",
                      "timestamp": "string"
                    },
                    "rearRight": {
                      "value": "string",
                      "timestamp": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/statistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get statistics",
        "description": "Endpoint used to get vehicle values grouped under the category of statistics. The latest retrieved value is presented upon a successful execution.",
        "operationId": "GetStatistics",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticResponse"
                },
                "example": {
                  "status": 0,
                  "operationId": "string",
                  "data": {
                    "averageSpeed": {
                      "value": "string",
                      "timestamp": "string",
                      "unit": "string"
                    },
                    "distanceToEmpty": {
                      "value": "string",
                      "timestamp": "string",
                      "unit": "string"
                    },
                    "tripMeter1": {
                      "value": "string",
                      "timestamp": "string",
                      "unit": "string"
                    },
                    "tripMeter2": {
                      "value": "string",
                      "timestamp": "string",
                      "unit": "string"
                    },
                    "averageFuelConsumption": {
                      "value": "string",
                      "timestamp": "string",
                      "unit": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/odometer": {
      "get": {
        "tags": [
          "Odometer"
        ],
        "summary": "Get odometer value",
        "description": "Vehicle's latest odometer value in km",
        "operationId": "GetOdometer",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OdometerValue"
                },
                "example": {
                  "odometer": {
                    "value": 0,
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/fuel": {
      "get": {
        "tags": [
          "Fuel"
        ],
        "summary": "Get fuel amount",
        "description": "Vehicle's Latest Fuel Amount in Liters",
        "operationId": "GetFuelAmount",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FuelAmount"
                },
                "example": {
                  "fuelAmount": {
                    "value": 0,
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/engine": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get engine diagnostic values",
        "description": "Vehicle's Latest Engine Diagnostic Values such as engine-coolant-level, oil level etc.",
        "operationId": "GetEngineDiagnostics",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineDiagnostics"
                },
                "example": {
                  "oilLevelWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "engineCoolantLevelWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/doors": {
      "get": {
        "tags": [
          "Doors, windows and locks"
        ],
        "summary": "Get door and lock status",
        "description": "Vehicle's Door and Lock Status Values",
        "operationId": "GetDoorAndLockStatus",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Doors"
                },
                "example": {
                  "centralLock": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "frontLeftDoor": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "frontRightDoor": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "rearLeftDoor": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "rearRightDoor": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "hood": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "tailgate": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "tankLid": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/diagnostics": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get diagnostic values",
        "description": "Vehicle's Latest Diagnostic Values",
        "operationId": "GetDiagnostics",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diagnostics"
                },
                "example": {
                  "serviceWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "serviceTrigger": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "engineHoursToService": {
                    "value": 0,
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "distanceToService": {
                    "value": 0,
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "washerFluidLevelWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "timeToService": {
                    "value": 0,
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands": {
      "get": {
        "tags": [
          "Commands"
        ],
        "summary": "List commands",
        "description": "Used to list the commands which can be sent to the vehicle",
        "operationId": "GetCommandList",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandListResponse"
                },
                "example": {
                  "status": 0,
                  "operationId": "string",
                  "data": [
                    {
                      "command": "HONK_AND_FLASH",
                      "href": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/command-accessibility": {
      "get": {
        "tags": [
          "Commands"
        ],
        "summary": "Get accessibility status",
        "description": "Check if vehicle is accessible to send invocation commands. If not available a unavailable reason is displayed.",
        "operationId": "GetCommandsAccessibility",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandAccessibility"
                },
                "example": {
                  "availabilityStatus": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  },
                  "unavailableReason": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/brakes": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get brake fluid level",
        "description": "Vehicle's Latest Brake Status Values like brake fluid level",
        "operationId": "GetBrakeStatus",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrakeStatus"
                },
                "example": {
                  "brakeFluidLevelWarning": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/engine-status": {
      "get": {
        "tags": [
          "Engine"
        ],
        "summary": "Get engine status",
        "description": "Vehicle's latest engine status value.",
        "operationId": "GetEngineStatus",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineStatus"
                },
                "example": {
                  "engineStatus": {
                    "value": "string",
                    "unit": "string",
                    "timestamp": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/lock-reduced-guard": {
      "post": {
        "tags": [
          "Doors, windows and locks"
        ],
        "summary": "Lock doors with reduced guard",
        "description": "Used to send a lock with reduced guard command to the vehicle.",
        "operationId": "InvokeLockReducedGuard",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vin}/commands/honk-flash": {
      "post": {
        "tags": [
          "Lights and sound"
        ],
        "summary": "Honk and Flash",
        "description": "Used to send a honk & flash command to the vehicle.",
        "operationId": "InvokeHonkFlash",
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "Vehicle identifier (VIN)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "YV1CT9551B1570982"
          },
          {
            "name": "vcc-api-operationId",
            "in": "header",
            "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body for this command.",
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoke"
                },
                "example": {
                  "vin": "string",
                  "invokeStatus": "WAITING",
                  "message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Request contains an unaccepted input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Resource forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invocation specific error, due to a conflict with the vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "InvokeUnlock": {
        "type": "object",
        "properties": {
          "vin": {
            "type": "string"
          },
          "invokeStatus": {
            "enum": [
              "WAITING",
              "RUNNING",
              "COMPLETED",
              "REJECTED",
              "UNKNOWN",
              "TIMEOUT",
              "CONNECTION_FAILURE",
              "VEHICLE_IN_SLEEP",
              "UNLOCK_TIME_FRAME_PASSED",
              "UNABLE_TO_LOCK_DOOR_OPEN",
              "EXPIRED",
              "SENT",
              "NOT_SUPPORTED",
              "CAR_IN_SLEEP_MODE",
              "DELIVERED",
              "DELIVERY_TIMEOUT",
              "SUCCESS",
              "CAR_TIMEOUT",
              "CAR_ERROR",
              "NOT_ALLOWED_PRIVACY_ENABLED",
              "NOT_ALLOWED_WRONG_USAGE_MODE",
              "INVOCATION_SPECIFIC_ERROR"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "readyToUnlock": {
            "type": "boolean"
          },
          "readyToUnlockUntil": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Invoke": {
        "type": "object",
        "properties": {
          "vin": {
            "type": "string"
          },
          "invokeStatus": {
            "enum": [
              "WAITING",
              "RUNNING",
              "COMPLETED",
              "REJECTED",
              "UNKNOWN",
              "TIMEOUT",
              "CONNECTION_FAILURE",
              "VEHICLE_IN_SLEEP",
              "UNLOCK_TIME_FRAME_PASSED",
              "UNABLE_TO_LOCK_DOOR_OPEN",
              "EXPIRED",
              "SENT",
              "NOT_SUPPORTED",
              "CAR_IN_SLEEP_MODE",
              "DELIVERED",
              "DELIVERY_TIMEOUT",
              "SUCCESS",
              "CAR_TIMEOUT",
              "CAR_ERROR",
              "NOT_ALLOWED_PRIVACY_ENABLED",
              "NOT_ALLOWED_WRONG_USAGE_MODE",
              "INVOCATION_SPECIFIC_ERROR"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EngineStartRequest": {
        "type": "object",
        "properties": {
          "runtimeMinutes": {
            "maximum": 15,
            "minimum": 0,
            "type": "integer",
            "description": "Time in minutes engine will be running. Can be set to maximum 15 minutes",
            "format": "int32"
          }
        }
      },
      "VehicleVin": {
        "type": "object",
        "properties": {
          "vin": {
            "type": "string"
          }
        }
      },
      "Descriptions": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "upholstery": {
            "type": "string"
          },
          "steering": {
            "type": "string"
          }
        }
      },
      "Images": {
        "type": "object",
        "properties": {
          "exteriorImageUrl": {
            "type": "string"
          },
          "internalImageUrl": {
            "type": "string"
          }
        }
      },
      "VehicleDetails": {
        "type": "object",
        "properties": {
          "vin": {
            "type": "string"
          },
          "modelYear": {
            "type": "integer",
            "format": "int32"
          },
          "gearbox": {
            "type": "string"
          },
          "fuelType": {
            "type": "string"
          },
          "externalColour": {
            "type": "string"
          },
          "batteryCapacityKWH": {
            "type": "number",
            "format": "float"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "descriptions": {
            "$ref": "#/components/schemas/Descriptions"
          }
        }
      },
      "ResourceInstanceString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Windows": {
        "type": "object",
        "properties": {
          "frontLeftWindow": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "frontRightWindow": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "rearLeftWindow": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "rearRightWindow": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "sunroof": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      },
      "ExteriorWarning": {
        "type": "object",
        "properties": {
          "brakeLightCenterWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "brakeLightLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "brakeLightRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "fogLightFrontWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "fogLightRearWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "positionLightFrontLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "positionLightFrontRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "positionLightRearLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "positionLightRearRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "highBeamLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "highBeamRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "lowBeamLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "lowBeamRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "daytimeRunningLightLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "daytimeRunningLightRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "turnIndicationFrontLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "turnIndicationFrontRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "turnIndicationRearLeftWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "turnIndicationRearRightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "registrationPlateLightWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "sideMarkLightsWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "hazardLightsWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "reverseLightsWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      },
      "RInstance": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TyrePressure": {
        "type": "object",
        "properties": {
          "frontLeft": {
            "$ref": "#/components/schemas/RInstance"
          },
          "frontRight": {
            "$ref": "#/components/schemas/RInstance"
          },
          "rearLeft": {
            "$ref": "#/components/schemas/RInstance"
          },
          "rearRight": {
            "$ref": "#/components/schemas/RInstance"
          }
        }
      },
      "TyrePressureResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "operationId": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/TyrePressure"
          }
        }
      },
      "RInstanceWithUnit": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "StatisticResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "operationId": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/StatisticVals"
          }
        }
      },
      "StatisticVals": {
        "type": "object",
        "properties": {
          "averageSpeed": {
            "$ref": "#/components/schemas/RInstanceWithUnit"
          },
          "distanceToEmpty": {
            "$ref": "#/components/schemas/RInstanceWithUnit"
          },
          "tripMeter1": {
            "$ref": "#/components/schemas/RInstanceWithUnit"
          },
          "tripMeter2": {
            "$ref": "#/components/schemas/RInstanceWithUnit"
          },
          "averageFuelConsumption": {
            "$ref": "#/components/schemas/RInstanceWithUnit"
          }
        }
      },
      "OdometerValue": {
        "type": "object",
        "properties": {
          "odometer": {
            "$ref": "#/components/schemas/ResourceInstanceInteger"
          }
        }
      },
      "ResourceInstanceInteger": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FuelAmount": {
        "type": "object",
        "properties": {
          "fuelAmount": {
            "$ref": "#/components/schemas/ResourceInstanceFloat"
          }
        }
      },
      "ResourceInstanceFloat": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EngineDiagnostics": {
        "type": "object",
        "properties": {
          "oilLevelWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "engineCoolantLevelWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      },
      "EngineStatus": {
        "type": "object",
        "properties": {
          "engineStatus": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      },
      "Doors": {
        "type": "object",
        "properties": {
          "centralLock": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "frontLeftDoor": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "frontRightDoor": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "rearLeftDoor": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "rearRightDoor": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "hood": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "tailgate": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "tankLid": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      },
      "Diagnostics": {
        "type": "object",
        "properties": {
          "serviceWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "serviceTrigger": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "engineHoursToService": {
            "$ref": "#/components/schemas/ResourceInstanceInteger"
          },
          "distanceToService": {
            "$ref": "#/components/schemas/ResourceInstanceInteger"
          },
          "washerFluidLevelWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "timeToService": {
            "$ref": "#/components/schemas/ResourceInstanceInteger"
          }
        }
      },
      "CommandListItem": {
        "type": "object",
        "properties": {
          "command": {
            "enum": [
              "HONK_AND_FLASH",
              "HONK",
              "FLASH",
              "LOCK",
              "LOCK_REDUCED_GUARD",
              "UNLOCK",
              "ENGINE_START",
              "ENGINE_STOP",
              "CLIMATIZATION_START",
              "CLIMATIZATION_STOP",
              "SEND_NAVI_POI"
            ],
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "CommandListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "operationId": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandListItem"
            }
          }
        }
      },
      "CommandAccessibility": {
        "type": "object",
        "properties": {
          "availabilityStatus": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          },
          "unavailableReason": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      },
      "BrakeStatus": {
        "type": "object",
        "properties": {
          "brakeFluidLevelWarning": {
            "$ref": "#/components/schemas/ResourceInstanceString"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "vcc-api-key",
        "in": "header",
        "description": "Your application’s VCC API Key."
      },
      "accessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "The access token issued by Volvo ID identity system."
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "accessToken": []
    }
  ]
}